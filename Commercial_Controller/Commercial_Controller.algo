<---------  OBJECTS VALUE --------->
DEFINE Elevator
    SET NoFloors : empty                            // maxFloor
    SET Direction : empty                           // stopped OR Up OR Down
    INIT ElevatorFloorList : empty List             // List of floor destination
    SET ElevatorState : empty                       // Move or IDLE 
    SET Door : close                                // opne or close
    SET FloorCallBtn : empty                        // destination
    SET Columns : ListColumns                       // 1 columns for elevator 
    Set Battery : Battery                           // 1 battery per column
    SET elevatorCageButton : empty                  // Cage B 
ENDDEFINE            

DEFINE Column

    Column A: [1 TO 6]
    Column B: [1 TO 20]
    Column C: [1 and 21 to 40]
    Column D: [1 and 41 to 60]


ENDDEFINE

DEFINE Battery USING listOfColumns
    INIT listColumns TO listOfColumns
    INIT listOfBattery TO Array OF Battery 
ENDDEFINE
<--------------------------------->


<---------  CALL BUTTON --------->
SEQUENCE CallButton USING FloorCallBtn AND RequestedFloor AND direction
    SET direction Light Status TO ON WITH FloorCallBtn
    SET FloorCallBtn equal NULL
	SET RequestedFloor equal NULL
	SET Floor to 1
    "At the ground floor:"
	REPEAT
		IF User entered RequestedFloor THEN
			SET FloorCallBtn to Floor
			SET RequestedFloor to FloorCallBtn OR entered value
			 RETURN FloorCallBtn AND UserDestination AND direction
		ENDIF
		INCREMENT Floor by 1
	UNTIL (Floor = NumberOfFloors)

    "Check the higher OR THE NEXT floors for a call"
    SET Floor to 2
    REPEAT
        IF FloorCallBtn is equal UP  THEN
            SET FloorCallBtn to the currentFloor
            SET RequestedFloor to FloorCallBtn OR entered value
            RETURN FloorCallBtn AND UserDestination AND direction
        ENDIF
        INCREMENT Floor by 1
      UNTIL (Floor = NumberOfFloors)	

    "Check the basements for a call"
    SET Basement to 1
    REPEAT
        IF FloorCallBtn UP  THEN
            SET FloorCallBtn to the current Basement floor
            SET RequestedFloor to FloorCallBtn OR entered value
            RETURN FloorCallBtn AND UserDestination AND direction
        ENDIF
        INCREMENT Basement by 1
    UNTIL (BASEMENT = NumberOfBasements)																
							   
    IF (UserDestinaion is greater than UserPosition) THEN
        SET userDirection to UP
    ELSE
        SET userDirection to DOWN
    ENDIF                        
END SEQUENCE
<--------------------------------------->

<-------------FIND COLUMN------------>
SEQUENCE FindColumn USING FloorCallBtn and requestedFloor
 FOR EACH Column IN Battery listOfColumns
    IF  FloorCallBtn OR requestedFloor is a basement THEN
        SET ColumnID to A
    ELSE IF FloorCallBtn OR requestedFloor is between 2 and 20 floor THEN
        SET ColumnID to B
    ELSE IF FloorCallBtn OR requestedFloor is between 21 and 40 floor THEN 
        SET ColumnID to C 
    ELSE
        SET ColumnID to D
    ENDIF
    RETURN ColumnID
  END FOR  
END SEQUENCE
<---------------------------------------> 

<-------------FIND BEST ELEVATOR-------------------->
SEQUENCE findBestElevator USING ColumnID AND currentFloor AND direction
    FOR EACH Elevator in ColumnID
		IF Elevator AND currentFloor is equal 1rst floor AND ElevatorDoor is Open THEN
            GET Elevator ID
			CALL UpdateList WITH ElevatorFloorList AND requestedFloor
			RETURN 
        IF Elevator AND currentFloor is equal same floor AND both have same direction AND ElevatorDoor is Open THEN
			SET GoTo_Direction to 0
        ELSE 
            GET Elevator ID     
		ELSE IF elevatorPosition is equal to floorCall THEN
                GET Elevator ID 
        ELSE IF  direction is equal UP AND elevatorPosition IS < THAN floorCall THEN
                GET Elevator ID  
        ELSE IF direction is equal DOWN AND elevatorPosition IS > THAN floorCall THEN
                GET Elevator ID 
        ELSE IF elevator is EMPTY AND elevatorPosition is NEAR floorCall THEN
                GET Elevator ID 
        ELSE IF elevator is IDLE AND elevatorPosition is NEAR floorCall THEN
                GET Elevator ID 
        ELSE IF directionButton is equal UP AND elevatorDirection IS moving UP THEN
               CALL UpdateList WITH ElevatorFloorList AND requestedFloor
        ELSE IF directionButton is same as ElevatorDirection AND Elevator has not arrived to the floorCall THEN
                CALL UpdateList WITH ElevatorFloorList AND requestedFloor
                GET Elevator ID
        ELSE IF directionButton is equal DOWN AND elevatorDirection IS moving down THEN
                GET this Elevator ID    
        END IF      
    END FOR 
    CALL nearestElevator WITH RequestedFloor AND direction
    FOR EACH elavator IN column
        SET elevatorPosition to the ground floor
    END FOR    
END SEQUENCE
<----------------------------------------------->

<--------------- UPDATE ELEVATOR LIST ------------------>
SEQUENCE UpdateList USING (ElevatorFloorList AND requestedFloor)			
	PUSH requestedFloor into the ElevatorFloorList
	SET i to 1
	PUSH requestedFloor into the ElevatorFloorList and sort the list
END SEQUENCE 
<----------------------------------------------->

<--------------- NEAREST ELEVATOR------------------>
SEQUENCE NearestElevator (RequestedFloor, RequestedDirection)
    FOR EACH Elevator IN ColumnID
		IF RequestedFloor > CurrentFloor AND direction is Up AND RequestedDirection IS Up THEN
			GET Elevator ID
		ELSE IF RequestedFloor < CurrentFloor AND direction is Down AND RequestedDirection IS Down THEN
            GET Elevator ID
		END IF
    END FOR 
END SEQUENCE
<------------------------------------------------->

<----------------------MOVE ELEVATOR----------------------> 
SEQUENCE moveElevator USING FloorCallBtn AND direction
    SET FloorCallBtn Light Status TO ON WITH GoTo_Direction
        IF FloorCallBtn EQUAL pressed AND elevatorPosition IS HIGH THAN currentFloor THEN
            MOVE ElevatorCage DOWN
            DISPLAY floorNumber ON Internal AND External Elevator
        ELSE IF FloorCallBtn is equal pressed AND elevatorPosition IS LOW THAN currentFloor THEN
            MOVE ElevatorCage UP   
            DISPLAY floorNumber ON Internal AND External Elevator 
        ELSE FloorCallBtn EQUAL pressed AND elevatorPosition EQUAL currentFloor THEN
            CALL openDoors 
        END IF   
END SEQUENCE
<--------------------------------------------------> 

<----------------OPEN THE ELEVATOR DOOR--------------->
SEQUENCE StopElevator USING Elevator
	Stop Elevator
	INIT Timer TO 3 Seconds
	INIT DoorOpenTimer TO 30 Seconds
	Elevator Status is Stopped
	SET Status TO Stopped
END SEQUENCE

SEQUENCE openDoors USING currentFloor
    WAIT UNTIL Elevator is Stopped OR Idle 
        open doors
        INIT  doorsOpen REMAINING Timer TO 5 Seconds 
	WHILE REMAINING Timer > 0 Second OR Door is Obstructed 
		KEEP Door open
	END WHILE 
    IF requestedFloor equal currentFloor THEN
        open doors
    ELSE
        close doors     
    END IF    
END SEQUENCE 
<----------------------------------------------->



'--- car call ---'
SEQUENCE callFloorButton USING elevatorCageButton AND direction
    SET direction Light Status TO ON WITH elevatorCageButton
    IF elevatorCageButton is pressed THEN 
        CALL closeDoors
END SEQUENCE
'--- /car call ---'

<---------------CLOSE DOOR WHEN USER GET IN CAR --------------------->
SEQUENCE closeDoors USING elevatorCageButton 
    FOR all the elevatorCageButton in ElevatorCage
        SET closeTime TO 5 secondes
        IF requestFloorButton equal pressed THEN
            close the doors
            CALL moveElevator   
        ELSE IF requestFloorButton IS selected THEN
            Start closeTimer
    END FOR    
    REPEAT
        SET DoorCheck to FALSE
        SET WeightCheck to FALSE
        IF (there is an obstable infront of the door sensor) THEN
          SET Alarm TO Active 
        ELSE
            SET DoorCheck to TRUE
        ENDIF

        IF (the total weight is greater than the elevator capacity) THEN
            SET Alarm TO Active 
        ELSE
            SET WeightCheck to TRUE
        ENDIF

        IF Obstructed THEN
			Call OpenDoors
    UNTIL DoorCheck and WeightCheck are TRUE       
END SEQUENCE 
<--------------------------------------------------->

<---------MOVE THE ELEVATOR ONCE AGAIN THE USER GET IN CAR --------------->
SEQUENCE moveElevator USING elevatorCageButton AND requestedFloor
    SET elevatorCageButton Light Status TO ON WITH floorNumber
    WHILE elevatorCageButton equal pressed
           MOVE ElevatorCage TO requestedFloor
           DISPLAY floorNumber ON Internal AND External Elevator
        IF Elevator elevatorCageButton is equal requestedFloor THEN
            CALL StopElevator WITH Elevator
        ELSE IF Elevator is Stopped THEN 
			CALL OpenDoor WITH currentFloor
		END IF    
    END WHILE
END SEQUENCE 
<-------------------------------------------------- >


<---------------REQUEST FLOOR------------------------------>
SEQUENCE requestFloor  USING requestedElevator
    CALL callFloorButton WITH elevatorCageButton AND  direction
    closeDoors WITH elevatorCageButton AND requestedFloor
    CALL moveElevator WITH elevatorCageButton 
    StopElevator WITH Elevator
    CALL  openDoors WITH currentFloor
END SEQUENCE 
<----------------------------------------------------->

<----------------REQUEST ELEVATOR ------------------------------>
SEQUENCE requestElevator USING currentFloor AND direction AND battery
    CALL CallButton WITH FloorCallBtn AND  RequestedFloor                                                   
    CALL FindColumn WITH FloorCallBtn AND requestedFloor RETURNING ColumnID
    findBestElevator WITH currentFloor AND ColumnID
    CALL moveElevator  WITH floorNumber AND direction
    openDoors  WITH FloorCallBtn AND currentFloor
END SEQUENCE 

<--------------------------------------------------->





----------------------DESCRIPTION---------------------------
Floors deserved:
Column A: B6 to B1 + RC 
Column B: 2 to 20 + RC 
Column C: 21 to 40 + RC
Column D: 41 to 60 + RC
----------------------SCENARIO---------------------------
//SCENARIO 1 : 

Elevator B1 at 20th floor going to the 5th floor
Elevator B2 at 3rd floor going to the 15th floor
Elevator B3 at 13th floor going to RC
Elevator B4 at 15th floor going to the 2nd floor
Elevator B5 at 6th floor going to RC

Someone at RC wants to go to the 20th floor.
Elevator B5 is expected to be sent.
// 


SEQUENCE MAIN_SCENARIO1 

    SET battery : INSTANTIATE Battery WITH B                                                                                    // INICIATE Battery for colum B
    SET elevator INSTANTIATE Elevator WITH B5 AND 40 AND down AND [1 TO 20] AND move AND close AND 1 AND B and Battery AND B    // INICIATE Elevator B5
    SET userFloor : get Floor                                                                                                   // GEt user request floor 20
    SET elevator : FloorCallBtn to userFloor                                                                                    // Change Elevator value 

    CALL requestElevator USING userFloor AND down AND battery                                                                   // Request elevator 
    
    SET userRequestElevatorFloor : get Floor                                                                                   // GEt user request floor RC
    SET elevator : FloorCallBtn to userRequestElevatorFloor                                                                    // Change Elevator value 
    CALL requestFloor USING requestedElevator                                                                                  // Elevator to requeste floor 

END SEQUENCE 


<----------------------------------------------------->


//SCENARIO 2 : 

Elevator C1 at RC going to the 21st floor
Elevator C2 at 23rd floor going to the 28th floor
Elevator C3 at 33rd floor going to RC
Elevator C4 at 40th floor going to the 24th floor
Elevator C5 at 39th floor going to RC

Someone at RC wants to go to the 36th floor.
Elevator C1 is expected to be sent.


SEQUENCE MAIN_SCENARIO2 

    SET battery : INSTANTIATE Battery WITH C                                                                                    // INICIATE Battery for colum C
    SET elevator INSTANTIATE Elevator WITH C1 AND 21 AND Up AND [1 TO 21] AND move AND close AND 1 AND C and Battery AND C      // INICIATE Elevator C1
    SET userFloor : get Floor                                                                                                   // GEt user request floor 36
    SET elevator : FloorCallBtn to userFloor                                                                                    // Change Elevateur value 

    CALL requestElevator USING userFloor AND Up AND battery                                                                     // Request elevator

                                                                                                                                // GEt user request floor RC
    SET elevator : FloorCallBtn to userRequestElevatorFloor                                                                    // Change Elevateur value 
    CALL requestFloor USING requestedElevator                                                                                   // Elevator to requeste floor 

END SEQUENCE 

<----------------------------------------------------->
    
//SCENARIO 3 :

Elevator D1 at 58th going to RC
Elevator D2 at 50th floor going to the 60th floor
Elevator D3 at 46th floor going to the 58th floor
Elevator D4 at RC going to the 54th floor
Elevator D5 at 60th floor going to RC

Someone at 54e floor wants to go to RC.
Elevator D1 is expected to be sent.

SEQUENCE MAIN_SCENARIO3 

    SET battery : INSTANTIATE Battery WITH D                                                                                    // INICIATE Battery for colum D
    SET elevator INSTANTIATE Elevator WITH D1 AND 58 AND Down AND [58 TO 1] AND move AND close AND 1 AND D and Battery AND D    // INICIATE Elevator D5
    SET userFloor : get Floor                                                                                                   // GEt user request floor 54
    SET elevator : FloorCallBtn to userFloor                                                                                    // Change Elevateur value 

    CALL requestElevator USING userFloor AND Down AND battery                                                                     // Request elevator 
    
    SET userRequestElevatorFloor : get Floor                                                                                   // GEt user request floor RC
    SET elevator : FloorCallBtn to userRequestElevatorFloor                                                                    // Change Elevateur value 
    CALL requestFloor USING requestedElevator                                                                                  // Elevator to requeste floor 

END SEQUENCE 

<--------------------------------------------------------->

//SCENARIO 4 :

Elevator A1 “Idle” at SS4
Elevator A2 “Idle” at RC
Elevator A3 at SS3 going to SS5
Elevator A4 at SS6 going to RC
Elevator A5 at SS1 going to SS6

Someone at SS3 wants to go to RC.
Elevator A4 is expected to be sent.

SEQUENCE MAIN_SCENARIO4 

    SET battery : INSTANTIATE Battery WITH A                                                                                      // INICIATE Battery for colum A
    SET elevator INSTANTIATE Elevator WITH A4 AND RC AND Down AND [SS6 TO 1] AND move AND close AND 1 AND A and Battery AND A4    // INICIATE Elevator A4
    SET userFloor : get Floor                                                                                                   // GEt user request floor SS3
    SET elevator : FloorCallBtn to userFloor                                                                                    // Change Elevateur value 

    CALL requestElevator USING userFloor AND Down AND battery                                                                     // Request elevator 
    
    SET userRequestElevatorFloor : get Floor                                                                                   // GEt user request floor RC
    SET elevator : FloorCallBtn to userRequestElevatorFloor                                                                    // Change Elevateur value 
    CALL requestFloor USING requestedElevator                                                                                  // Elevator to requeste floor 

END SEQUENCE 

<--------------------------------------------------------->